name: BXARM on Linux

# This workflow will run when a push is made to any branch in the repository
on: push

# Workflow's environment variables can be referred by all jobs
env:
  TARGET_DIR: /opt/iarsystems/bxarm-9.60.3/arm/bin
  COMMON_DIR: /opt/iarsystems/bxarm-9.60.3/common/bin

jobs:
  build-library:
    name: Build library
    runs-on: [ self-hosted, linux ]
    steps:
      - uses: actions/checkout@v4

      - name: Check compiler version
        run: |
             $COMMON_DIR/../../arm/bin/iccarm --version
      
      - name: Build library
        run: |
             $COMMON_DIR/iarbuild project/EWARM/ChecksumLibrary.ewp -make Debug -log all

      - name: Upload library
        uses: actions/upload-artifact@v4
        with:
          name: library
          path: project/EWARM/Debug/Exe/ChecksumLibrary.a
          if-no-files-found: error
          
  cstat-library:
    name: Analyze library
    runs-on: [ self-hosted, linux ]
    steps:
      - uses: actions/checkout@v4
          
      - name: C-STAT - Library
        run: |
             $COMMON_DIR/iarbuild project/EWARM/ChecksumLibrary.ewp -cstat_analyze Debug -log all
             $COMMON_DIR/iarbuild project/EWARM/ChecksumLibrary.ewp -cstat_report Debug -log all

      - name: Upload library report (C-STAT)
        uses: actions/upload-artifact@v4
        with:
          name: library-report.html
          path: project/EWARM/Debug/C-STAT/*.html
          if-no-files-found: error

  build-project:
    name: Build project
    needs: build-library
    runs-on: [ self-hosted, linux ]
    steps:
      - uses: actions/checkout@v4
      - name: Download library
        uses: actions/download-artifact@v4
        with:
          name: library
          path: project/EWARM/Debug/Exe/

      - name: Build project
        run: |             
             $COMMON_DIR/iarbuild project/EWARM/project.ewp -make Debug -log all

      - name: Upload project
        uses: actions/upload-artifact@v4
        with:
          name: project
          path: project/EWARM/Debug/Exe/project.out
          if-no-files-found: error

# Comment out the `cstat-project` job if your license has no IAR C-STAT for static code analysis
  cstat-project:
    name: C-STAT Project
    needs: build-project
    runs-on: [ self-hosted, linux ]
    steps:
      - uses: actions/checkout@v4
      - name: Static Analysis
        run: |
             $COMMON_DIR/iarbuild project/EWARM/project.ewp -cstat_analyze Debug -log all
             $COMMON_DIR/iarbuild project/EWARM/project.ewp -cstat_report Debug -log all

      - name: Upload project report (C-STAT)
        uses: actions/upload-artifact@v4
        with:
          name: project-cstat.html
          path: project/EWARM/project/C-STAT/*.html
          if-no-files-found: error

# Comment out the `crun-project` job if your license has no IAR C-RUN for runtime analysis
  crun-project:
    name: C-RUN Project (Sim)
    needs: build-project
    runs-on: [ self-hosted, linux ]
    steps:
      - name: Download project
        uses: actions/download-artifact@v4
        with:
          name: project
          path: project/EWARM/Debug/Exe/
          
      - name: Runtime Analysis
        run: |
             $COMMON_DIR/CSpyBat \
               $TARGET_DIR/libarmPROC.so \
               $TARGET_DIR/libarmSIM2.so \
               --plugin=$TARGET_DIR/libarmLibsupportUniversal.so \
               --debug_file=project/EWARM/Debug/Exe/project.out \
               --rtc_enable \
               --rtc_output=crun-messages.txt \
               --timeout=2000000 \
               --backend \
               --cpu=cortex-m4 \
               --fpu=vfpv4_sp \
               --endian=little \
               --semihosting || true

      - name: Upload project report (C-RUN)
        uses: actions/upload-artifact@v4
        with:
          name: project-crun.txt
          path: ./crun-messages.txt
          if-no-files-found: error

# Update `needs` to `build-project` if you do not have C-STAT and/or C-RUN enabled for your license
  cspy-project-on-hw:
    name: C-RUN Project (HW)
    needs: [ cstat-project, crun-project ]
    runs-on: [ self-hosted, linux ]
    steps:
      - name: Download project
        uses: actions/download-artifact@v4
        with:
          name: project
          path: project/EWARM/Debug/Exe/
          
      - name: Run project on-hardware
        run: |
             $COMMON_DIR/CSpyBat \
               $TARGET_DIR/libarmPROC.so \
               $TARGET_DIR/libarmJET.so \
               --plugin=$TARGET_DIR/libarmLibsupportUniversal.so \
               --flash_loader=$TARGET_DIR/../config/flashloader/ST/FlashSTM32F4xxx.board \
               --debug_file=project/EWARM/Debug/Exe/project.out \
               --timeout=2000000 \
               --backend \
                 --cpu=cortex-m4 \
                 --fpu=vfpv4_sp \
                 -p $TARGET_DIR/../config/debugger/ST/STM32F407VG.ddf \
                 --semihosting \
                 --device=STM32F407VG \
                 --jet_power_from_probe=switch_off \
                 --drv_communication_log=cspycomm.log \
                 --drv_interface=SWD
               
      - name: Upload C-SPY log
        uses: actions/upload-artifact@v4
        with:
          name: cspycomm.log
          path: ./cspycomm.log
          if-no-files-found: error

# Update `needs` to `build-project` if you do not have C-STAT and/or C-RUN enabled for your license          
  deploy:
    name: Deploy firmware
    needs: cspy-project-on-hw
    runs-on: [ self-hosted, linux ]
    steps:
      - name: Download ELF
        uses: actions/download-artifact@v4
        with:
          name: project
          path: ./

      - name: Convert to SREC
        run: |
             mkdir output
             $TARGET_DIR/ielftool --srec --verbose project.out output/project.srec

      - name: Convert to HEX
        run: |
             $TARGET_DIR/ielftool --ihex --verbose project.out output/project.hex

      - name: Upload firmwares
        uses: actions/upload-artifact@v4
        with:
          name: firmwares-srec-hex
          path: ./output/*.*
          if-no-files-found: error            
